{"version":3,"file":"date-picker_test.js","sourceRoot":"","sources":["../src/test/date-picker_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAE9C,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAA;AAEzC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;IACxB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA;QAChD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAA;IACnC,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAA;QAC3D,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,yCAAyC,CAAC,CAAA;QACvE,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAe,CAAA;QAC3E,MAAM,MAAM,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAA;QACtD,MAAM,CAAC,KAAK,EAAE,CAAA;QACd,MAAM,EAAE,CAAC,cAAc,CAAA;QACvB,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAe,CAAA;QAC3E,MAAM,EAAE,CAAC,cAAc,CAAA;QACvB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;IACvD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { DatePicker } from '../date-picker.js'\n\nimport { fixture, assert } from '@open-wc/testing'\nimport { html } from 'lit/static-html.js'\n\nsuite('date-picker', () => {\n  test('is defined', () => {\n    const el = document.createElement('date-picker')\n    assert.instanceOf(el, DatePicker)\n  })\n\n  test('renders with default values', async () => {\n    const el = await fixture(html`<date-picker></date-picker>`)\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test('renders with a set name', async () => {\n    const el = await fixture(html`<date-picker name=\"Test\"></date-picker>`)\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, Test!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test('handles a click', async () => {\n    const el = (await fixture(html`<date-picker></date-picker>`)) as DatePicker\n    const button = el.shadowRoot!.querySelector('button')!\n    button.click()\n    await el.updateComplete\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 1</button>\n      <slot></slot>\n    `\n    )\n  })\n\n  test('styling applied', async () => {\n    const el = (await fixture(html`<date-picker></date-picker>`)) as DatePicker\n    await el.updateComplete\n    assert.equal(getComputedStyle(el).paddingTop, '16px')\n  })\n})\n"]}