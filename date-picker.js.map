{"version":3,"file":"date-picker.js","sourceRoot":"","sources":["src/date-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, PropertyValues } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\nimport './datepicker-calendar'\nimport { styles } from './date-picker.css'\n\n/**\n * A Date-Picker.\n *\n * @fires selected-date-changed - Indicates when the count changes\n * @slot - This element has a slot\n */\n@customElement('date-picker')\nexport class DatePicker extends LitElement {\n  static override styles = styles\n\n  override connectedCallback() {\n    super.connectedCallback()\n    this.addEventListener('next-year', () => {\n      this.handleChangeCalendarYear('next')\n    })\n    this.addEventListener('next-month', () => {\n      this.handleChangeCalendarMonth('next')\n    })\n    this.addEventListener('prev-month', () => {\n      this.handleChangeCalendarMonth('prev')\n    })\n    this.addEventListener('prev-year', () => {\n      this.handleChangeCalendarYear('prev')\n    })\n    this.addEventListener('selected-date-changed', (e) => {\n      this.selectedDate = (e as CustomEvent).detail\n    })\n  }\n  override disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener('next-year', () => {\n      this.handleChangeCalendarYear('next')\n    })\n    this.removeEventListener('next-month', () => {\n      this.handleChangeCalendarMonth('next')\n    })\n    this.removeEventListener('prev-month', () => {\n      this.handleChangeCalendarMonth('prev')\n    })\n    this.removeEventListener('prev-year', () => {\n      this.handleChangeCalendarYear('prev')\n    })\n    this.removeEventListener('selected-date-changed', (e) => {\n      this.selectedDate = (e as CustomEvent).detail\n    })\n  }\n\n  @state()\n  selectedDate: Date | undefined = undefined\n\n  @property({ type: Object })\n  date = new Date()\n\n  @state()\n  datePlusOneMonth = new Date(\n    this.date.getFullYear(),\n    this.date.getMonth() + 1,\n    1\n  )\n\n  @property({ type: Boolean })\n  range = false\n\n  @property({ reflect: true })\n  locale = 'en-US'\n\n  override willUpdate(changedProperties: PropertyValues<this>) {\n    if (changedProperties.has('locale')) {\n      this.date = new Date(this.date.toLocaleString(this.locale))\n    }\n    if (changedProperties.has('range')) {\n      this.style.setProperty('--max-width', this.range ? '43em' : '21em')\n    }\n    if (changedProperties.has('date')) {\n      this.datePlusOneMonth = new Date(\n        this.date.getFullYear(),\n        this.date.getMonth() + 1,\n        1\n      )\n    }\n  }\n\n  override render() {\n    return html`\n      <div class=\"calendar-container\">\n        <datepicker-calendar\n          class=\"start\"\n          .date=\"${this.date}\"\n          locale=\"${this.locale}\"\n          ?range=\"${this.range}\"\n          selected-date=\"${this.selectedDate}\"\n        ></datepicker-calendar>\n        <datepicker-calendar\n          class=\"end\"\n          ?hidden=\"${!this.range}\"\n          .date=\"${this.datePlusOneMonth}\"\n          locale=\"${this.locale}\"\n          range=\"true\"\n          selected-date=\"${this.selectedDate}\"\n        ></datepicker-calendar>\n      </div>\n      <slot></slot>\n      <div class=\"triangle\"></div>\n    `\n  }\n\n  private handleChangeCalendarMonth(direction: 'prev' | 'next') {\n    const dir = direction === 'prev' ? -1 : 1\n    this.date = new Date(this.date.getFullYear(), this.date.getMonth() + dir, 1)\n  }\n\n  private handleChangeCalendarYear(direction: 'prev' | 'next') {\n    const dir = direction === 'prev' ? -1 : 1\n    this.date = new Date(this.date.getFullYear() + dir, this.date.getMonth(), 1)\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'date-picker': DatePicker\n  }\n}\n"]}